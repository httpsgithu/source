# This is a basic workflow to help you get started with Actions

name: CI-I18N

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0,15,30,45 * * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4

    - run: 'echo "$SSH_KEY" > cicd_i18n && chmod 600 cicd_i18n'
      shell: bash
      env:
        SSH_KEY: ${{secrets.CICD_RELEASE}}

    - run: 'echo "$CROWDIN_JSON" > translations/crowdin.json && chmod 600 translations/crowdin.json'
      shell: bash
      env:
        CROWDIN_JSON: ${{secrets.CROWDIN_JSON}}


    -
      # Setting up Docker Buildx with docker-container driver is required
      # at the moment to be able to use a subdirectory with Git context
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
        

    - name: Build and push Docker images
      uses: docker/build-push-action@v5
      with:
        context: "."
        repository: jfesler/dummyvalue
        path: .
        push: false
